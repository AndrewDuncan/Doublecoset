#!/usr/bin/python
from subgroup import subgroupGraph as Graph
import sys

def makeSubgroup(gens):
	gens = [x.strip().replace(',','') for x in gens]
	g = Graph.fromGenerators(gens)
	print("H is the subgroup of F_26 generated by "+', '.join([('\033[1;47m'+x+'\033[0m') for x in gens]))
	return g

if len(sys.argv)>1:
	f = open(sys.argv[1])
	gens = f.readlines()
	f.close()
else:
	gens = raw_input('Generators: ').split(' ')

g=makeSubgroup(gens)

print("Write a command and then a word\nCommands are:\n subgroup (sg)\n contains (has)\n leftcoset (lc)\n rightcoset (rc)\n doublecoset (dc)\n exit")

ocommand = 'has'
oword = ''

while 1:
	inp = raw_input('>').strip().split(' ')
	inp = [oword if x=='%' else x for x in inp]

	command = inp[0]
	if len(inp)>1:
		word=inp[1]

	if command in ['subgroup','sg']:
		gens = inp[1:]
		g=makeSubgroup(gens)
	elif command in ['contains','has']:
		if word in g:
			print("%s is in H" % word)
		else:
			print("%s is not in H" % word)
	elif command in ['leftcoset','lc']:
		h,s = g.leftCosetRepresentative(word)
		print('Left coset representation of %s:\n %s . %s' % (word,s,h))
	elif command in ['rightcoset','rc']:
		h,s = g.rightCosetRepresentative(word)
		print('Right coset representation of %s:\n %s . %s' % (word,h,s))
	elif command in ['doublecoset','dc']:
		h1,s,h2 = g.doubleCosetRepresentative(word)
		print('Double coset representation of %s:\n %s . %s . %s' % (word,h1,s,h2))
	elif command in ['exit','quit']:
		break
	else:
		print("That is not a valid command.")
		
	ocommand = command
	oword = word
